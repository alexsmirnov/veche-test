<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.netoprise</groupId>
  <artifactId>veche-test</artifactId>
  <packaging>war</packaging>
  <version>0.1-SNAPSHOT</version>
  <name>veche-test Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <developers>
    <developer>
      <id>alexsmirnov</id>
      <name>Alexander Smirnov</name>
      <email>alsmirnnov@gmail.com</email>
    </developer>
  </developers>
  <properties>
    <jboss.bom.version>1.0.0.Final</jboss.bom.version>
    <jboss.as.version>7.1.3.Final</jboss.as.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <cdi.version>1.0-SP4</cdi.version>
    <scribe.version>1.3.0</scribe.version>
    <jackson.version>1.9.2</jackson.version>
    <guava.version>13.0.1</guava.version>
    <commons-lang.version>3.1</commons-lang.version>
    <commons-collection.version>3.2.1</commons-collection.version>
    <commons-beanutils.version>1.8.3</commons-beanutils.version>
    <mockito.version>1.9.0</mockito.version>
    <solder.version>3.1.1.Final</solder.version>
    <arquillian.version>1.0.3.Final</arquillian.version>
    <junit.version>4.11</junit.version>
    <resteasy.version>2.3.4.Final</resteasy.version>
  </properties>

  <dependencyManagement>
    <dependencies>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate 
				stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras 
				from the Hibernate family of projects) -->
      <dependency>
        <groupId>org.jboss.bom</groupId>
        <artifactId>jboss-javaee-6.0-with-tools</artifactId>
        <version>${jboss.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.bom</groupId>
        <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
        <version>${jboss.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-bom</artifactId>
        <version>${resteasy.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-warp-bom</artifactId>
        <type>pom</type>
        <version>1.0.0.Alpha2</version>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <type>pom</type>
        <version>${arquillian.version}</version>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.netoprise</groupId>
      <artifactId>veche</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>0.5.0</version>
    </dependency>
		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss AS 7 -->

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
    <dependency>
      <groupId>org.jboss.spec.javax.annotation</groupId>
      <artifactId>jboss-annotations-api_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss AS 7 -->
    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <version>2.0.0-beta-2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-arquillian-container-managed</artifactId>
      <version>${jboss.as.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.graphene</groupId>
      <artifactId>graphene-webdriver</artifactId>
      <type>pom</type>
      <version>2.0.0.Alpha3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-warp-jsf</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.xml</exclude>
        </excludes>
      </testResource>
    </testResources>
    <finalName>veche-test</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
					<!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>update-datasource.server</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${basedir}/target/servers/jboss-as-${jboss.as.version}/standalone/configuration</dir>
                  <outputDir>${basedir}/target/servers/jboss-as-${jboss.as.version}/standalone/configuration</outputDir>
                  <stylesheet>${basedir}/src/test/config/jboss-config.xsl</stylesheet>
                  <includes>
                    <include>standalone*.xml</include>
                  </includes>
<!--                   <parameters>
                    <parameter>
                      <name>ra.neo4j.dir</name>
                      <value>${jboss.server.base.dir}/neo4j</value>
                    </parameter>
                  </parameters>
 -->                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-as</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jboss.as</groupId>
                  <artifactId>jboss-as-dist</artifactId>
                  <version>${jboss.as.version}</version>
                  <type>tar.gz</type>
                  <!--classifier> [classifier - optional] </classifier -->
                  <overWrite>false</overWrite>
                  <outputDirectory>target/servers</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
